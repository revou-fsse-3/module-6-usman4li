"""add animals table

Revision ID: 28ecbd5b3f94
Revises: 
Create Date: 2024-02-24 00:12:57.716982

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '28ecbd5b3f94'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('animals', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('age',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('habitat',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('countries',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('created_at')

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.BIGINT(),
               server_default=None,
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('age',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('job',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
        batch_op.alter_column('job',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('age',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('animals', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
        batch_op.alter_column('countries',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('habitat',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('gender',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('age',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.Integer(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
